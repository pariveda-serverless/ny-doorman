# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
anchors:
  container-config: &container-config
    docker:
      - image: circleci/python:3.6.4
        environment:
          TERM: dumb
          
  configure-aws-access: &configure-aws-access
    run:
      name: Configure AWS access
      command: |
        mkdir -p ~/.aws
        cat > ~/.aws/credentials << EOL
        [default]
        aws_access_key_id = ${ACCESS_KEY_ID}
        aws_secret_access_key = ${SECRET_ACCESS_KEY}
        EOL

  cache-node-dependencies: &cache-node-dependencies
    save_cache:
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - node_modules

  load-node-dependency-cache: &load-node-dependency-cache
    restore_cache:
      key: dependency-cache-{{ checksum "package.json" }}

  cache-python-dependencies: &cache-python-dependencies
    save_cache:
      key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      paths:
        - ".venv"
        - "/usr/local/bin"
        - "/usr/local/lib/python3.6/site-packages"

  load-python-dependency-cache: &load-python-dependency-cache
    restore_cache: # ensure this step occurs *before* installing dependencies
        key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

  prod-config: &prod-config
    environment:
      - STAGE: prod

  deploy: &deploy
    <<: *container-config
    steps:
      - checkout
      - *load-node-dependency-cache
      - *configure-aws-access
      - run:
          name: Deploy application
          command: npm run deploy

version: 2
jobs:
  install-deploy:
    <<: *container-config
    environment:
      STAGE: prod
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - *load-python-dependency-cache
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - *cache-python-dependencies
      # Download and cache dependencies
      - run:
          name: Install nvm
          command: |
            wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
      - *load-node-dependency-cache
      - run:
          name: Setup nvm and install node
          command: |
            export NVM_DIR="/home/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install 10.15 && nvm use 10.15
            npm install
      - *cache-node-dependencies
      - *configure-aws-access
      - run:
          name: Deploy application
          command: |
            export NVM_DIR="/home/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            sudo pip install pipenv
            pipenv install
            nvm use 10.15
            npm run serverless

  # deploy-prod:
  #   <<: *deploy
  #   <<: *prod-config

workflows:
  version: 2

  deploy-pipeline:
    jobs:
      - install-deploy:
          context: ny-doorman
      # - deploy-prod:
      #     context: ny-doorman
      #     requires:
      #       - install
